MapsActivity.java
package com.example.mohan.demomaps;
import android.Manifest;
import android.content.pm.PackageManager;
import android.location.Address;
import android.location.Geocoder;
import android.support.v4.app.ActivityCompat;
import android.support.v4.app.FragmentActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.EditText;
import android.widget.TextView;
import com.google.android.gms.maps.CameraUpdateFactory;
import com.google.android.gms.maps.GoogleMap;
import com.google.android.gms.maps.OnMapReadyCallback;
import com.google.android.gms.maps.SupportMapFragment;
import com.google.android.gms.maps.model.LatLng;
import com.google.android.gms.maps.model.MarkerOptions;
import java.io.IOException;
import java.util.List;
public class MapsActivity extends FragmentActivity implements OnMapReadyCallback {
 private GoogleMap mMap;
 private TextView tv;
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_maps);
 // Obtain the SupportMapFragment and get notified when the map is ready to be used.
 SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()
 .findFragmentById(R.id.map);
 mapFragment.getMapAsync(this);
 }
 @Override
 public void onMapReady(GoogleMap googleMap) {
 mMap = googleMap;
 // Add a marker in Sydney and move the camera
 LatLng sydney = new LatLng(-35, 121.5);
 mMap.addMarker(new MarkerOptions().position(sydney).title("Marker"));
 mMap.moveCamera(CameraUpdateFactory.newLatLng(sydney));
 }
 public void setmMap(GoogleMap mMap) {
 this.mMap = mMap; }
 public void onSearch(View view) {
 List<Address> addressList=null;
 EditText et_location= (EditText) findViewById(R.id.et1);
 String location=et_location.getText().toString();
 if(location!=null || location.equals("")){
 Geocoder geocoder=new Geocoder(this);
 try {
 addressList= geocoder.getFromLocationName(location,1);
 } catch (IOException e) { e.printStackTrace(); }
 Address address=addressList.get(0);
 LatLng latLng=new LatLng(address.getLatitude(),address.getLongitude());
 mMap.addMarker(new MarkerOptions().position(latLng).title(location));
 mMap.animateCamera(CameraUpdateFactory.newLatLng(latLng ));
 }
 }
 public void onType(View view) {
 if(mMap.getMapType()== GoogleMap.MAP_TYPE_NORMAL){
 mMap.setMapType(GoogleMap.MAP_TYPE_SATELLITE);
 }else{ mMap.setMapType(GoogleMap.MAP_TYPE_NORMAL); }
 }
 public void onZoom(View view) {
 if(view.getId()==R.id.zoomin){
 mMap.animateCamera(CameraUpdateFactory.zoomIn());
 } if(view.getId()==R.id.zoomout){mMap.animateCamera(CameraUpdateFactory.zoomOut());
 }
 }
}
Activity_maps.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
 android:layout_width="match_parent"
 android:orientation="vertical"
 android:layout_height="400dp">
 <LinearLayout
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:orientation="horizontal"
 android:id="@+id/ll1">
 <EditText
 android:id="@+id/et1"
 android:layout_width="196dp"
 android:layout_height="wrap_content" />
 <Button
 android:id="@+id/searchbut"
 android:layout_width="98dp"
 android:layout_height="wrap_content"
 android:onClick="onSearch"
 android:text="Search" />
 <Button
 android:id="@+id/typebut"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:onClick="onType"
 android:text="Type" />
 </LinearLayout>
 <LinearLayout
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:orientation="horizontal"
 android:layout_below="@id/ll1"
 android:id="@+id/linearLayout"
 android:layout_alignParentBottom="true">
 <fragment xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools"
 android:id="@+id/map" android:layout_below="@id/ll1"
 android:name="com.google.android.gms.maps.SupportMapFragment"
 android:layout_width="343dp"
 android:layout_height="match_parent"
 tools:context="com.example.mohan.demomaps.MapsActivity" />

 <LinearLayout
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:orientation="vertical">
 <Button
 android:id="@+id/zoomin"
 android:layout_width="wrap_content"
 android:layout_height="69dp"
 android:onClick="onZoom"
 android:text="+" />
 <Button
 android:id="@+id/zoomout"
 android:layout_width="wrap_content"
 android:layout_height="68dp"
 android:onClick="onZoom"
 android:text="-" />
 </LinearLayout>
 </LinearLayout>
</RelativeLayout>
AndroidMainfest.xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
 package="com.example.mohan.demomaps">
 <!--
 The ACCESS_COARSE/FINE_LOCATION permissions are not required to use
 Google Maps Android API v2, but you must specify either coarse or fine
 location permissions for the 'MyLocation' functionality.
 -->
 <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
 <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
 <uses-permission android:name="android.permission.INTERNET"/>
 <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
 <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
 <uses-permission android:name="com.google.android.providers.gsf.permission.READ_GSERVICES" />
 <application
 android:allowBackup="true"
 android:icon="@mipmap/ic_launcher"
 android:label="@string/app_name"
 android:roundIcon="@mipmap/ic_launcher_round"
 android:supportsRtl="true"
 android:theme="@style/AppTheme">
 <!-- The API key for Google Maps-based APIs is defined as a string resource. (See the file
"res/values/google_maps_api.xml"). Note that the API key is linked to the encryption key used to sign the APK. You need
a different API key for each encryption key, including the release key that is used to sign the APK for publishing.
You can define the keys for the debug and release targets in src/debug/ and src/release/.
 -->
 <meta-data
 android:name="com.google.android.geo.API_KEY"
 android:value="@string/google_maps_key" />
 <activity
 android:name=".MapsActivity"
 android:label="@string/title_activity_maps">
 <intent-filter>
 <action android:name="android.intent.action.MAIN" />
 <category android:name="android.intent.category.LAUNCHER" />
 </intent-filter>
 </activity>
 </application>
</manifest>
