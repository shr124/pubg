Activity_mail.xml
<Button
 android:id="@+id/but1"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="Notify Me"
 tools:layout_editor_absoluteX="140dp"
 tools:layout_editor_absoluteY="185dp"
 android:layout_alignParentLeft="true"
 android:layout_alignParentStart="true"
 android:layout_marginTop="22dp" />
MainActivity.java
public class MainActivity extends AppCompatActivity {
 Button but;
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 but=(Button) findViewById(R.id.but1);
 but.setOnClickListener(new View.OnClickListener() {
 @Override
 public void onClick(View v) {
 Intent int1=new Intent();
 PendingIntent pi1=PendingIntent.getActivity(MainActivity.this,0,int1,0);
 Notification not1=new Notification.Builder(MainActivity.this)
 .setTicker("Ticker Title")
 .setContentTitle("Mohan\'s Notification")
 .setContentText("This is Notification Example")
 .setSmallIcon(R.drawable.icon)
 .addAction(R.drawable.red_button,"Action 1",pi1)
 .addAction(R.drawable.green_ball,"Action 2",pi1)
 .setContentIntent(pi1).getNotification();
 not1.flags=Notification.FLAG_AUTO_CANCEL;
 NotificationManager nm= (NotificationManager) getSystemService(NOTIFICATION_SERVICE);
 nm.notify(0,not1);
 }
 });
 }
}
Read Number from Contacts
AndroidManifest.xml <uses-permission android:name="android.permission.READ_CONTACTS"/
package com.example.mohan.retrivingcontacts;
import android.app.Activity;
import android.content.Intent;
import android.database.Cursor;
import android.net.Uri;
import android.provider.ContactsContract;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;
public class MainActivity extends AppCompatActivity {
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 Button button = (Button)findViewById(R.id.button);
 button.setOnClickListener(new View.OnClickListener()
 {
 @Override
 public void onClick(View v)
 {
 Intent intent = new Intent(Intent.ACTION_PICK, ContactsContract.Contacts.CONTENT_URI);
startActivityForResult(intent, 1);
 }
 });
 }
 @Override public void onActivityResult(int reqCode, int resultCode, Intent data){ super.onActivityResult(reqCode,
resultCode, data);
 switch(reqCode)
 {
 case (1):
 if (resultCode == Activity.RESULT_OK)
 {
 Uri contactData = data.getData();
 Cursor c = managedQuery(contactData, null, null, null, null);
 if (c.moveToFirst())
 {
 String id = c.getString(c.getColumnIndexOrThrow(ContactsContract.Contacts._ID));
 String hasPhone =c.getString(c.getColumnIndex(ContactsContract.Contacts.HAS_PHONE_NUMBER));
 if (hasPhone.equalsIgnoreCase("1"))
 {
 Cursor phones =
getContentResolver().query(ContactsContract.CommonDataKinds.Phone.CONTENT_URI,null,ContactsContract.Commo
nDataKinds.Phone.CONTACT_ID +" = "+ id,null, null);
 phones.moveToFirst();
String cNumber = phones.getString(phones.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER));
 Toast.makeText(getApplicationContext(), cNumber, Toast.LENGTH_SHORT).show();
 //setCn(cNumber);
 }
 }
 }
 }
 }
}
